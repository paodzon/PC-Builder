{"ast":null,"code":"var _jsxFileName = \"A:\\\\Projects\\\\PC-Builder\\\\src\\\\components\\\\Items\\\\TableP.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable, useSortBy } from 'react-table';\nimport makeData from './makedata';\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nfunction Table({\n  columns,\n  data\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy); // We don't want to render all 2000 rows for this example, so cap\n  // it at 20 for this use case\n\n  const firstPageRows = rows.slice(0, 20);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), headerGroup.headers.map(column =>\n  /*#__PURE__*/\n  // Add the sorting props to control sorting. For this example\n  // we can add them into the header props\n  React.createElement(\"th\", Object.assign({}, column.getHeaderProps(column.getSortByToggleProps()), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), column.render('Header'), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : '')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), firstPageRows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Showing the first 20 results of \", rows.length, \" rows\"));\n}\n\nfunction TableP() {\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    columns: [{\n      Header: 'First Name',\n      accessor: 'firstName'\n    }, {\n      Header: 'Last Name',\n      accessor: 'lastName'\n    }]\n  }, {\n    Header: 'Info',\n    columns: [{\n      Header: 'Age',\n      accessor: 'age'\n    }, {\n      Header: 'Visits',\n      accessor: 'visits'\n    }, {\n      Header: 'Status',\n      accessor: 'status'\n    }, {\n      Header: 'Profile Progress',\n      accessor: 'progress'\n    }]\n  }], []);\n  const data = React.useMemo(() => makeData(2000), []);\n  return /*#__PURE__*/React.createElement(Styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TableP;","map":{"version":3,"sources":["A:/Projects/PC-Builder/src/components/Items/TableP.js"],"names":["React","styled","useTable","useSortBy","makeData","Styles","div","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","length","TableP","useMemo","Header","accessor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA1B;;AA6BA,SAASC,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAf,EAAkC;AAChC,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFZ,QAAQ,CACV;AACEM,IAAAA,OADF;AAEEC,IAAAA;AAFF,GADU,EAKVN,SALU,CANZ,CADgC,CAehC;AACA;;AACA,QAAMY,aAAa,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,EAAd,CAAtB;AAEA,sBACE,uDACE,+CAAWN,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACK,GAAb,CAAiBC,WAAW,iBAC3B,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM;AAAA;AAC7B;AACA;AACA,8CAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGF,MAAM,CAACG,MAAP,CAAc,QAAd,CADH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACI,QAAP,GACGJ,MAAM,CAACK,YAAP,GACE,KADF,GAEE,KAHL,GAIG,EALN,CAHF,CAHD,CADH,CADD,CADH,CADF,eAsBE,+CAAWf,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGI,aAAa,CAACE,GAAd,CACC,CAACU,GAAD,EAAMC,CAAN,KAAY;AACVd,IAAAA,UAAU,CAACa,GAAD,CAAV;AACA,wBACE,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUb,GAAV,CAAcc,IAAI,IAAI;AACrB,0BACE,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACP,MAAL,CAAY,MAAZ,CAA9B,CADF;AAGD,KAJA,CADH,CADF;AAQE,GAXL,CADH,CAtBF,CADF,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,eAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAsCX,IAAI,CAACoB,MAA3C,UAxCF,CADF;AA4CD;;AAED,SAASC,MAAT,GAAkB;AAChB,QAAM1B,OAAO,GAAGR,KAAK,CAACmC,OAAN,CACd,MAAM,CACJ;AACEC,IAAAA,MAAM,EAAE,MADV;AAEE5B,IAAAA,OAAO,EAAE,CACP;AACE4B,MAAAA,MAAM,EAAE,YADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,MAAM,EAAE,WADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALO;AAFX,GADI,EAcJ;AACED,IAAAA,MAAM,EAAE,MADV;AAEE5B,IAAAA,OAAO,EAAE,CACP;AACE4B,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADO,EAKP;AACED,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KALO,EASP;AACED,MAAAA,MAAM,EAAE,QADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KATO,EAaP;AACED,MAAAA,MAAM,EAAE,kBADV;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KAbO;AAFX,GAdI,CADQ,EAqCd,EArCc,CAAhB;AAwCA,QAAM5B,IAAI,GAAGT,KAAK,CAACmC,OAAN,CAAc,MAAM/B,QAAQ,CAAC,IAAD,CAA5B,EAAoC,EAApC,CAAb;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEI,OAAhB;AAAyB,IAAA,IAAI,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeyB,MAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, useSortBy } from 'react-table'\r\n\r\nimport makeData from './makedata';\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Table({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy\r\n  )\r\n\r\n  // We don't want to render all 2000 rows for this example, so cap\r\n  // it at 20 for this use case\r\n  const firstPageRows = rows.slice(0, 20)\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                // Add the sorting props to control sorting. For this example\r\n                // we can add them into the header props\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  {/* Add a sort direction indicator */}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ðŸ”½'\r\n                        : ' ðŸ”¼'\r\n                      : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {firstPageRows.map(\r\n            (row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )}\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n      <div>Showing the first 20 results of {rows.length} rows</div>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction TableP() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        columns: [\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'firstName',\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'lastName',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        Header: 'Info',\r\n        columns: [\r\n          {\r\n            Header: 'Age',\r\n            accessor: 'age',\r\n          },\r\n          {\r\n            Header: 'Visits',\r\n            accessor: 'visits',\r\n          },\r\n          {\r\n            Header: 'Status',\r\n            accessor: 'status',\r\n          },\r\n          {\r\n            Header: 'Profile Progress',\r\n            accessor: 'progress',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const data = React.useMemo(() => makeData(2000), [])\r\n\r\n  return (\r\n    <Styles>\r\n      <Table columns={columns} data={data} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nexport default TableP\r\n"]},"metadata":{},"sourceType":"module"}